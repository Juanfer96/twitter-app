{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/search-page/search-page.component.ts","./src/app/components/search-page/search-page.component.html","./src/app/components/settings-page/settings-page.component.ts","./src/app/components/settings-page/settings-page.component.html","./src/app/components/trend/trend.component.ts","./src/app/components/trend/trend.component.html","./src/app/components/tweet-detail/tweet-detail.component.ts","./src/app/components/tweet-detail/tweet-detail.component.html","./src/app/components/tweet/tweet.component.ts","./src/app/components/tweet/tweet.component.html","./src/app/pipes/date-ago.pipe.ts","./src/app/services/trend-service.service.ts","./src/app/services/tweet-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./components/home-page/home-page.component\";\r\nimport { SearchPageComponent } from \"./components/search-page/search-page.component\";\r\nimport { SettingsPageComponent } from \"./components/settings-page/settings-page.component\";\r\nimport { TweetDetailComponent } from \"./components/tweet-detail/tweet-detail.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"home\", pathMatch: \"full\" },\r\n  { path: \"home\", component: HomePageComponent },\r\n  { path: \"search\", component: SearchPageComponent },\r\n  { path: \"settings\", component: SettingsPageComponent },\r\n  { path: \"TweetDetail/:id_str\", component: TweetDetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'twitter-app';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { TweetComponent } from \"./components/tweet/tweet.component\";\r\nimport { HeaderComponent } from \"./components/header/header.component\";\r\nimport { FooterComponent } from \"./components/footer/footer.component\";\r\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\r\nimport { TweetDetailComponent } from \"./components/tweet-detail/tweet-detail.component\";\r\nimport { TrendComponent } from \"./components/trend/trend.component\";\r\nimport { HomePageComponent } from \"./components/home-page/home-page.component\";\r\nimport { SearchPageComponent } from \"./components/search-page/search-page.component\";\r\nimport { SettingsPageComponent } from \"./components/settings-page/settings-page.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { DateAgoPipe } from \"./pipes/date-ago.pipe\";\r\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\r\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TweetComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    TweetDetailComponent,\r\n    TrendComponent,\r\n    HomePageComponent,\r\n    SearchPageComponent,\r\n    SettingsPageComponent,\r\n    DateAgoPipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    InfiniteScrollModule,\r\n    FontAwesomeModule,\r\n    NgxSpinnerModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"footer\">\r\n  <div class=\"footer-item\">\r\n    <h3>Developers</h3>\r\n    <ul class=\"footer-list\">\r\n      <li>\r\n        <span>Mauricio Navarro</span>\r\n      </li>\r\n      <li>\r\n        <span>Marcelo Benjamin Benitez</span>\r\n      </li>\r\n      <li>\r\n        <span>Juan Fernando Pico</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"footer-item\">\r\n    <h3>\r\n      <a class=\"footer-git\" href=\"https://github.com/Juanfer96/twitter-app\"\r\n        >GitHub</a\r\n      >\r\n    </h3>\r\n  </div>\r\n  <div class=\"footer-end\"><span>Globant UI Bootcamp 2020</span></div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 class=\"title\">Gwitter</h1>\r\n<app-navbar></app-navbar>","import { Component, OnInit } from \"@angular/core\";\r\nimport { TweetServiceService } from \"src/app/services/tweet-service.service\";\r\nimport { ITweet } from \"src/app/interfaces/tweetInterface\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"]\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  constructor(\r\n    public ts: TweetServiceService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n  Tweets: ITweet[];\r\n  notscrolly = true;\r\n  allTweetsLoaded = false;\r\n  initialTimeLineTweets = 50; //the initial tweets that are going to we displayed\r\n  index = 1; //the index used to keep displaying tweets in the timeline\r\n  cont: number; //used to count the tweets on the timeline\r\n\r\n  getTweetsTimeLine(): void {\r\n    this.ts.getTweets(this.initialTimeLineTweets).subscribe(Tweets => {\r\n      this.Tweets = Tweets;\r\n    });\r\n  }\r\n\r\n  onScroll() {\r\n    this.spinner.show(); //shows the spinner while the tweets are loading\r\n    if (this.cont >= 200) {\r\n      //when all the maximum number of tweets are loaded,a message is displayed in the html of the component\r\n      this.allTweetsLoaded = true;\r\n    }\r\n\r\n    if (this.notscrolly) {\r\n      this.notscrolly = false;\r\n      this.index++;\r\n      this.cont = this.initialTimeLineTweets * this.index;\r\n      this.addNewTeetsTimeLine(this.cont);\r\n    }\r\n  }\r\n\r\n  addNewTeetsTimeLine(count: number) {\r\n    this.ts.getTweets(count).subscribe(Tweets => {\r\n      this.Tweets = Tweets;\r\n      this.notscrolly = true;\r\n      this.spinner.hide(); //hides the spinner when the time line is loaded\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTweetsTimeLine();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<ul>\r\n  <div infiniteScroll [infiniteScrollDistance]=\"2\" (scrolled)=\"onScroll()\">\r\n    <app-tweet [Tweets]=\"Tweets\"></app-tweet>\r\n\r\n    <div *ngIf=\"allTweetsLoaded\">\r\n      <p class=\"allTweetsLoaded\">\r\n        you have already seen all the tweets, upload to see new content\r\n      </p>\r\n    </div>\r\n  </div>\r\n</ul>\r\n\r\n<div class=\"spinnerBottom\">\r\n  <ngx-spinner\r\n    [fullScreen]=\"false\"\r\n    type=\"line-spin-fade\"\r\n    size=\"medium\"\r\n    color=\"grey\"\r\n    bdColor=\"inherit\"\r\n  >\r\n  </ngx-spinner>\r\n</div>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  faSearch = faSearch;\r\n  faHome = faHome;\r\n  faCog = faCog;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"navbar\">\r\n  <!-- ICON SIZE 3x -->\r\n  <div class=\"navbar-item size3x\" routerLink=\"/home\">\r\n    <fa-icon [icon]=\"faHome\" size=\"3x\"></fa-icon>\r\n  </div>\r\n  <div class=\"navbar-item size3x\" routerLink=\"/search\">\r\n    <fa-icon [icon]=\"faSearch\" size=\"3x\"></fa-icon>\r\n  </div>\r\n  <div class=\"navbar-item size3x\" routerLink=\"/settings\">\r\n    <fa-icon [icon]=\"faCog\" size=\"3x\"></fa-icon>\r\n  </div>\r\n\r\n  <!-- ICON SIZE 2x -->\r\n\r\n  <div class=\"navbar-item size2x\" routerLink=\"/home\">\r\n    <fa-icon [icon]=\"faHome\" size=\"2x\"></fa-icon>\r\n    <span class=\"navbar-item-text\">Home</span>\r\n  </div>\r\n  <div class=\"navbar-item size2x\" routerLink=\"/search\">\r\n    <fa-icon [icon]=\"faSearch\" size=\"2x\"></fa-icon>\r\n    <span class=\"navbar-item-text\">Search</span>\r\n  </div>\r\n  <div class=\"navbar-item size2x\" routerLink=\"/settings\">\r\n    <fa-icon [icon]=\"faCog\" size=\"2x\"></fa-icon>\r\n    <span class=\"navbar-item-text\">Settings</span>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { TweetServiceService } from \"src/app/services/tweet-service.service\";\r\nimport { ITweet } from \"src/app/interfaces/tweetInterface\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-search-page\",\r\n  templateUrl: \"./search-page.component.html\",\r\n  styleUrls: [\"./search-page.component.css\"]\r\n})\r\nexport class SearchPageComponent implements OnInit {\r\n  searchText: string;\r\n  tweets: ITweet[];\r\n  faSearch = faSearch;\r\n  searching: boolean = false;\r\n\r\n  notscrolly: boolean = true;\r\n  allTweetsLoaded: boolean = false;\r\n  initialTimeLineTweets: number = 10; //the initial tweets that are going to we displayed\r\n  index: number = 10; //the index used to keep displaying tweets in the timeline\r\n  cont: number; //used to count the tweets on the timeline\r\n\r\n  constructor(\r\n    public ts: TweetServiceService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  showSearchResults(): void {\r\n    //To not start an empty search with 3 blanks\r\n    if (this.searchText === \"\") {\r\n      this.searchText = \"\";\r\n      this.spinner.hide();\r\n    }\r\n    //Only start searching with 3 characters\r\n    if (this.searchText.length >= 3) {\r\n      this.getTweets(this.initialTimeLineTweets);\r\n      this.searching = true;\r\n      this.spinner.hide();\r\n    } else {\r\n      this.searching = false;\r\n      this.spinner.show();\r\n    }\r\n  }\r\n\r\n  getTweets(count: number): void {\r\n    this.ts.getSearchTweets(this.searchText, count).subscribe(data => {\r\n      this.tweets = data.statuses;\r\n    });\r\n  }\r\n\r\n  onScroll() {\r\n  \r\n    if (this.notscrolly) {\r\n      this.spinner.show(); //shows the spinner while the tweets are loading\r\n      this.notscrolly = false;\r\n      this.cont = this.initialTimeLineTweets + this.index;\r\n      this.index = this.index + 10;\r\n      this.addNewTeetsTimeLine(this.cont);\r\n    }\r\n  }\r\n\r\n  addNewTeetsTimeLine(count: number) {\r\n    this.getTweets(count);\r\n    this.notscrolly = true;\r\n    setTimeout(() => {\r\n      this.spinner.hide();\r\n    }, 2000); //hides the spinner when the time line is loaded, the setTimeout is used because the search was too fast,soo with that we can simulate more search time\r\n  }\r\n\r\n  setSelectedTrend(trendName: string) {\r\n    if (trendName[0] == \"#\") {\r\n      trendName = trendName.slice(1);\r\n    }\r\n    this.searchText = trendName;\r\n    this.showSearchResults();\r\n  }\r\n  setQuicklySearch(search: string) {\r\n    this.searchText = search;\r\n    this.showSearchResults();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<section class=\"search\">\r\n  <fa-icon [icon]=\"faSearch\" size=\"2x\" class=\"icon\"></fa-icon>\r\n  <input\r\n    class=\"input\"\r\n    type=\"text\"\r\n    [(ngModel)]=\"searchText\"\r\n    (keyup)=\"showSearchResults()\"\r\n    placeholder=\"Search...\"\r\n  />\r\n</section>\r\n\r\n<div class=\"quickly-search\">\r\n  <div class=\"quickly-search-item\" (click)=\"setQuicklySearch('News')\">\r\n    <span>News</span>\r\n  </div>\r\n  <div class=\"quickly-search-item\" (click)=\"setQuicklySearch('Events')\">\r\n    <span>Events</span>\r\n  </div>\r\n</div>\r\n\r\n<ul *ngIf=\"searching\">\r\n  <h3 class=\"subtitle\">\"{{ searchText }}\" search results</h3>\r\n  <div infiniteScroll [infiniteScrollDistance]=\"2\" (scrolled)=\"onScroll()\">\r\n    <app-tweet [Tweets]=\"tweets\"></app-tweet>\r\n  </div>\r\n</ul>\r\n\r\n<div class=\"spinnerBottom\">\r\n  <ngx-spinner\r\n    [fullScreen]=\"false\"\r\n    type=\"line-spin-fade\"\r\n    size=\"medium\"\r\n    color=\"#a1becc\"\r\n    bdColor=\"inherit\"\r\n  ></ngx-spinner>\r\n</div>\r\n\r\n\r\n<app-trend (selectedTrend)=\"setSelectedTrend($event)\"></app-trend>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ITimeLineaConfiguration } from \"src/app/interfaces/timeLineConfigurationInterface\";\r\nimport { TweetServiceService } from \"src/app/services/tweet-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-settings-page\",\r\n  templateUrl: \"./settings-page.component.html\",\r\n  styleUrls: [\"./settings-page.component.css\"]\r\n})\r\nexport class SettingsPageComponent implements OnInit {\r\n  timeLineSetting: ITimeLineaConfiguration;\r\n\r\n  constructor(public ts: TweetServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.timeLineSetting = this.ts.getRealTimeConfiguration();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n\r\n<header>\r\n  <h1>Silence notifications from. . .</h1>\r\n</header>\r\n\r\n<label class=\"container\">\r\n  <span>People who have not verified the account</span>\r\n  <input\r\n    [(ngModel)]=\"timeLineSetting.hideAccountsNotVerified\"\r\n    type=\"checkbox\"\r\n    checked=\"checked\"\r\n  />\r\n  <span class=\"checkmark\"></span>\r\n</label>\r\n\r\n<label class=\"container\">\r\n  <span>People who do not follow</span>\r\n  <input\r\n    [(ngModel)]=\"timeLineSetting.hidePeopleWhoDontfollow\"\r\n    type=\"checkbox\"\r\n    checked=\"checked\"\r\n  />\r\n</label>\r\n\r\n<label class=\"container\">\r\n  <span>People who have default profile information</span>\r\n  <input\r\n    [(ngModel)]=\"timeLineSetting.hideDefaultProfile\"\r\n    type=\"checkbox\"\r\n    checked=\"checked\"\r\n  />\r\n</label>\r\n\r\n<label class=\"container\">\r\n  <span>Tweets that contains a link</span>\r\n  <input\r\n    [(ngModel)]=\"timeLineSetting.hideTweetsWhitLinks\"\r\n    type=\"checkbox\"\r\n    checked=\"checked\"\r\n  />\r\n</label>\r\n\r\n<label class=\"container\">\r\n  <span>Tweets that has text truncated</span>\r\n  <input\r\n    [(ngModel)]=\"timeLineSetting.hideTweetsTruncated\"\r\n    type=\"checkbox\"\r\n    checked=\"checked\"\r\n  />\r\n</label>\r\n\r\n<app-footer></app-footer>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { ITrend } from \"../../interfaces/trendInterface\";\r\nimport { TrendServiceService } from \"../../services/trend-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-trend\",\r\n  templateUrl: \"./trend.component.html\",\r\n  styleUrls: [\"./trend.component.css\"]\r\n})\r\nexport class TrendComponent implements OnInit {\r\n  trends: ITrend[];\r\n  cont: number = 0;\r\n  @Output() selectedTrend = new EventEmitter();\r\n\r\n  constructor(private trendService: TrendServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.trendService.getTrends().subscribe(data => {\r\n      this.trends = data[0].trends;\r\n      this.generateId();\r\n    });\r\n  }\r\n\r\n  generateId(): void {\r\n    let i = 1;\r\n    this.trends.forEach(item => {\r\n      item.id = i++;\r\n    });\r\n  }\r\n\r\n  onSelectedTrend(trend) {\r\n    this.selectedTrend.emit(trend.name);\r\n  }\r\n}\r\n","<h3 class=\"subtitle\">Trends for you</h3>\r\n<ol class=\"list\">\r\n  <li\r\n    class=\"list-item\"\r\n    *ngFor=\"let trend of trends\"\r\n    (click)=\"onSelectedTrend(trend)\"\r\n  >\r\n    <div class=\"id-number\">{{ trend.id }}</div>\r\n    <div class=\"trend-wrapper\">\r\n      <div class=\"name\">{{ trend.name }}</div>\r\n      <div\r\n        *ngIf=\"trend.tweet_volume == null; then thenBlock; else elseBlock\"\r\n      ></div>\r\n      <ng-template #thenBlock\r\n        ><div class=\"tweet-volume\">0 Tweets</div></ng-template\r\n      >\r\n      <ng-template #elseBlock\r\n        ><div class=\"tweet-volume\">\r\n          {{ trend.tweet_volume }} Tweets\r\n        </div></ng-template\r\n      >\r\n    </div>\r\n  </li>\r\n</ol>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ITweet } from \"./../../interfaces/tweetInterface\";\r\nimport { TweetServiceService } from \"src/app/services/tweet-service.service\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Location } from \"@angular/common\";\r\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faRetweet } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faComment } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: \"app-tweet-detail\",\r\n  templateUrl: \"./tweet-detail.component.html\",\r\n  styleUrls: [\"./tweet-detail.component.css\"]\r\n})\r\nexport class TweetDetailComponent implements OnInit {\r\n  tweetId: string;\r\n  tweet: ITweet;\r\n  faArrowLeft = faArrowLeft;\r\n  faHeart = faHeart;\r\n  faRetweet = faRetweet;\r\n  faComment = faComment;\r\n  faCircle = faCircle;\r\n  faCheck = faCheck;\r\n  fasHeart = fasHeart;\r\n\r\n  constructor(\r\n    public ts: TweetServiceService,\r\n    private route: ActivatedRoute,\r\n    private location: Location\r\n  ) {}\r\n\r\n  getId() {\r\n    return this.route.snapshot.paramMap.get(\"id_str\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tweetId = this.getId();\r\n    this.ts.getIdTweet(this.tweetId).subscribe(data => {\r\n      this.tweet = data;\r\n    });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  clickReTweet() {\r\n    if (this.tweet.retweeted) {\r\n      this.tweet.retweeted = false;\r\n      this.tweet.retweet_count -= 1;\r\n    } else {\r\n      this.tweet.retweet_count += 1;\r\n      this.tweet.retweeted = true;\r\n    }\r\n  }\r\n\r\n  clickfav() {\r\n    if (this.tweet.favorited) {\r\n      this.tweet.favorited = false;\r\n      this.tweet.favorite_count -= 1;\r\n    } else {\r\n      this.tweet.favorite_count += 1;\r\n      this.tweet.favorited = true;\r\n    }\r\n  }\r\n}\r\n","<section class=\"tweet-detail-wrapper\">\r\n  <div class=\"tweetGoBack\">\r\n    <fa-icon [icon]=\"faArrowLeft\" size=\"2x\" (click)=\"goBack()\"></fa-icon>\r\n    <span>Tweet</span>\r\n  </div>\r\n\r\n  <div class=\"tweetHead\">\r\n    <div class=\"profileImage\">\r\n      <img src=\"{{ tweet?.user.profile_image_url }}\" alt=\"ProfileImage\" />\r\n    </div>\r\n    <div class=\"userName\">\r\n      <span>{{ tweet?.user.name }}</span>\r\n      <span *ngIf=\"tweet?.user.verified\">\r\n        <fa-icon [icon]=\"faCheck\" size=\"xs\" class=\"userVerified\"></fa-icon>\r\n      </span>\r\n    </div>\r\n    <div class=\"screenName\">\r\n      <span> @{{ tweet?.user.screen_name }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"tweetBody\">\r\n    <span class=\"text\">{{ tweet?.text }}</span>\r\n  </div>\r\n\r\n  <div *ngIf=\"tweet?.entities.media\">\r\n    <img\r\n      src=\"{{ (tweet?.entities.media)[0].media_url }}\"\r\n      alt=\"img not found\"\r\n      class=\"imageContent\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"timeAgoTweet\">\r\n    <span> {{ tweet?.created_at | date: \"h:mm a.-d MMM. yy \" }}</span>\r\n  </div>\r\n\r\n  <div class=\"tweetFooter\">\r\n    <div class=\"retweet\">\r\n      <span> {{ tweet?.retweet_count }} Retweet</span>\r\n    </div>\r\n    <div class=\"favourite\">\r\n      <span> {{ tweet?.favorite_count }} Like</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"tweetIcons\">\r\n    <div class=\"icon\">\r\n      <div clas=\"iconZone\" (click)=\"clickfav(); $event.stopPropagation()\">\r\n        <span *ngIf=\"!tweet?.favorited; else favorited\">\r\n          <fa-icon class=\"iconHeart\" [icon]=\"faHeart\" size=\"3x\"> </fa-icon\r\n        ></span>\r\n\r\n        <ng-template #favorited>\r\n          <fa-icon [icon]=\"fasHeart\" size=\"3x\" class=\"favourited\"></fa-icon>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"icon\" (click)=\"clickReTweet(); $event.stopPropagation()\">\r\n      <span *ngIf=\"!tweet?.retweeted; else retweetedDone\">\r\n        <fa-icon class=\"iconRe\" [icon]=\"faRetweet\" size=\"3x\"> </fa-icon>\r\n      </span>\r\n\r\n      <ng-template #retweetedDone>\r\n        <fa-icon class=\"retweeted\" [icon]=\"faRetweet\" size=\"3x\"></fa-icon>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <div class=\"icon\">\r\n      <fa-icon class=\"iconCo\" [icon]=\"faComment\" size=\"3x\"></fa-icon>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<app-footer></app-footer>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ITweet } from \"src/app/interfaces/tweetInterface\";\r\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faRetweet } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n@Component({\r\n  selector: \"app-tweet\",\r\n  templateUrl: \"./tweet.component.html\",\r\n  styleUrls: [\"./tweet.component.css\"]\r\n})\r\nexport class TweetComponent implements OnInit {\r\n  @Input() Tweets: ITweet[];\r\n  faHeart = faHeart;\r\n  faRetweet = faRetweet;\r\n  fasHeart = fasHeart;\r\n  faCheck = faCheck;\r\n  tweet: any;\r\n\r\n  clickfav(tweet: { favorited: boolean; favorite_count: number }) {\r\n    if (tweet.favorited) {\r\n      tweet.favorited = false;\r\n      tweet.favorite_count -= 1;\r\n    } else {\r\n      tweet.favorite_count += 1;\r\n      tweet.favorited = true;\r\n    }\r\n  }\r\n\r\n  clickReTweet(tweet: { retweeted: boolean; retweet_count: number }) {\r\n    if (tweet.retweeted) {\r\n      tweet.retweeted = false;\r\n      tweet.retweet_count -= 1;\r\n    } else {\r\n      tweet.retweet_count += 1;\r\n      tweet.retweeted = true;\r\n    }\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}","<li *ngFor=\"let tweet of Tweets\" routerLink=\"/TweetDetail/{{ tweet.id_str }}\">\r\n  <img src=\"{{ tweet.user.profile_image_url }}\" alt=\"\" class=\"profileImage\" />\r\n\r\n  <div class=\"tweetHead\">\r\n    <span class=\"userName\">{{ tweet.user.name }}</span>\r\n    <span *ngIf=\"tweet.user.verified\">\r\n      <fa-icon [icon]=\"faCheck\" size=\"xs\" class=\"userVerified\"></fa-icon>\r\n    </span>\r\n    <span class=\"screenName\"> @{{ tweet.user.screen_name }}</span>\r\n    <span class=\"timeAgoTweet\"> - {{ tweet.created_at | dateAgo }}</span>\r\n  </div>\r\n\r\n  <div class=\"tweetBody\">\r\n    <span class=\"text\">{{ tweet.text }}</span>\r\n  </div>\r\n\r\n  <div *ngIf=\"tweet.entities.media\">\r\n    <img\r\n      src=\"{{ tweet.entities.media[0].media_url }}\"\r\n      width=\"400\"\r\n      height=\"250\"\r\n      alt=\"img not found\"\r\n      class=\"imageContent\"\r\n    />\r\n  </div>\r\n\r\n  <div class=\"tweetFooter\">\r\n    <div class=\"favourite\" (click)=\"clickfav(tweet); $event.stopPropagation()\">\r\n      <span *ngIf=\"!tweet.favorited; else favorited\">\r\n        <fa-icon [icon]=\"faHeart\" size=\"2x\"></fa-icon>\r\n      </span>\r\n\r\n      <ng-template #favorited>\r\n        <fa-icon [icon]=\"fasHeart\" size=\"2x\" class=\"favourited\"></fa-icon>\r\n      </ng-template>\r\n    </div>\r\n    <span> {{ tweet.favorite_count }} </span>\r\n\r\n    <div\r\n      class=\"retweet\"\r\n      (click)=\"clickReTweet(tweet); $event.stopPropagation()\"\r\n    >\r\n      <span *ngIf=\"!tweet.retweeted; else retweetedDone\">\r\n        <fa-icon [icon]=\"faRetweet\" size=\"2x\"></fa-icon>\r\n      </span>\r\n\r\n      <ng-template #retweetedDone>\r\n        <fa-icon class=\"retweeted\" [icon]=\"faRetweet\" size=\"2x\"></fa-icon>\r\n      </ng-template>\r\n    </div>\r\n    <span> {{ tweet.retweet_count }} </span>\r\n  </div>\r\n</li>\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"dateAgo\",\r\n  pure: true\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\r\n      if (seconds < 29)\r\n        // less than 30 seconds ago will show as 'Just now'\r\n        return \"Just now\";\r\n      const intervals = {\r\n        yr: 31536000, //years\r\n        month: 2592000,\r\n        wk: 604800, //weeks\r\n        d: 86400, //day\r\n        h: 3600, //hours\r\n        m: 60, //minutes\r\n        s: 1 //secondss\r\n      };\r\n      let counter;\r\n      for (const i in intervals) {\r\n        counter = Math.floor(seconds / intervals[i]);\r\n        if (counter > 0) {\r\n          return counter + \" \" + i;\r\n        }\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ITrend } from \"../interfaces/trendInterface\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TrendServiceService {\r\n  private trendsUrl = \"http://localhost:8080/trends?id=23424747\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTrends(): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.trendsUrl)\r\n      .pipe(catchError(this.handleError<ITrend[]>(\"getMovies\", [])));\r\n  }\r\n\r\n  private handleError<T>(operation = \"operation\", result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { ITimeLineaConfiguration } from \"../interfaces/timeLineConfigurationInterface\";\r\nimport { ITweet } from \"../interfaces/tweetInterface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TweetServiceService {\r\n  private timeLineUrl = \"http://localhost:8080/timeline?count=\";\r\n  private searchURL = \"http://localhost:8080/search?q=\";\r\n  private idURL = \"http://localhost:8080/show?id=\";\r\n\r\n  userConfiguration: ITimeLineaConfiguration;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.userConfiguration = {\r\n      hideAccountsNotVerified: false,\r\n      hidePeopleWhoDontfollow: false,\r\n      hideDefaultProfile: false,\r\n      hideTweetsWhitLinks: false,\r\n      hideTweetsTruncated: false\r\n    };\r\n  }\r\n\r\n  getTweets(tweetsToDisplay: number): Observable<any> {\r\n    return this.http.get<any>(`${this.timeLineUrl}${tweetsToDisplay}`).pipe(\r\n      map(data => (data = this.finalFilter(data))),\r\n\r\n      catchError(err => {\r\n        return err;\r\n      })\r\n    );\r\n  }\r\n\r\n  filterTweetsByConfiguration(tweet: any) {\r\n    if (\r\n      this.userConfiguration.hideAccountsNotVerified &&\r\n      !tweet.user.verified\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.userConfiguration.hidePeopleWhoDontfollow &&\r\n      !tweet.user.following\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.userConfiguration.hideDefaultProfile &&\r\n      tweet.user.default_profile\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      this.userConfiguration.hideTweetsWhitLinks &&\r\n      tweet.entities.urls != 0\r\n    ) {\r\n      return false;\r\n    }\r\n    if (this.userConfiguration.hideTweetsTruncated && tweet.truncated) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  finalFilter(tweet: any) {\r\n    const tweetFiltered = tweet.filter(element =>\r\n      this.filterTweetsByConfiguration(element)\r\n    );\r\n    return tweetFiltered;\r\n  }\r\n\r\n  getRealTimeConfiguration(): ITimeLineaConfiguration {\r\n    return this.userConfiguration;\r\n  }\r\n\r\n  getSearchTweets(searchText: string, count: number): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.searchURL + searchText + \"&count=\" + count)\r\n      .pipe(catchError(this.handleError<ITweet[]>(\"getSearchTweets\", [])));\r\n  }\r\n\r\n  getIdTweet(searchId: string): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.idURL + searchId)\r\n      .pipe(catchError(this.handleError<ITweet[]>(\"getIdTweet\", [])));\r\n  }\r\n\r\n  private handleError<T>(operation = \"operation\", result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}